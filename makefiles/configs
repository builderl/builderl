# -*- mode: Makefile -*-

# Copyright (c) 2015-2016, Grzegorz Junka
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

$(DEV_BUILD_DONE): $(RELTOOL_CONFIG)
	if [ -L releases ]; then rm releases; fi
	./bin/mk_dev.esh
	touch $(DEV_BUILD_DONE)

$(REL_BUILD_DONE): $(DEV_BUILD_DONE)
	touch $(REL_BUILD_DONE)

OTP_PATH := $(ERL:%/bin/erl=%)
ERTS ?= $(shell (cd $(OTP_PATH) && echo erts-*))
OTP_ERTS := $(OTP_PATH)/$(ERTS)
BUILD_INFO_FILE = $(notdir $(BUILD_INFO))

ERTS_BIN ?= $(ERTS)/bin

$(ERTS_BIN)/%:
	@mkdir -p $(ERTS_BIN)
	@ln -s `(type $(OTP_ERTS)/bin/$* 2>/dev/null || echo ../../$(NODETOOL_DIR)/$*)\
		| tail -1 | awk '{ print $$NF }'` $(ERTS_BIN)/$*

erts_files = $(ERTS_BIN)/nodetool $(ERTS_BIN)/runner $(ERTS_BIN)/env.sh \
  $(ERTS_BIN)/escript $(ERTS_BIN)/run_erl $(ERTS_BIN)/erlexec \
  $(ERTS_BIN)/erl $(ERTS_BIN)/beam.smp $(ERTS_BIN)/epmd

bin/%:
	@ln -s $(OTP_PATH)/bin/$* bin/$*

bin_files = bin/start.boot bin/start.script \
  bin/start_clean.boot bin/start_sasl.boot

.PHONY: do-apps bld_deps compile bld_deps_test test_compile

do-apps: $(foreach app_name,$(App_Names),$(app_name:%=%.app))

bld_deps:
	./bin/deps.esh mk

compile: compile-deps bld_deps do-apps $(a_appup_dests) dev_files

bld_deps_test:
	./bin/deps.esh mk -p test

test_compile: compile-deps bld_deps_test dev_files $(DEV_BUILD_DONE) $(REBAR)

.PHONY: dev_files run_reltool rel_files run_tgz

dev_files: $(erts_files) $(bin_files)

run_reltool:
	rm -rf $(REL_PATH)
	./bin/mk_rel.esh

rel_files: run_reltool
	cp $(erts_files) $(REL_PATH)/$(ERTS_BIN)
	cp $(bin_files) $(REL_PATH)/bin
	mkdir $(REL_PATH)/etc
	cp etc/*.src etc/init.conf $(REL_PATH)/etc || true
	rsync -l bin/*.esh $(REL_PATH)/bin
	cp -r etc/init.d $(REL_PATH)/etc
	@echo Copying additional folders specified in \$$rel_copy_dirs variable...
	for dep in $(rel_copy_dirs); do rsync -r --exclude='.*' $$dep $(REL_PATH)/ ; done

tgz_rel_name = $(shell cat $(RELEASE_DATA) 2>/dev/null || echo unknown).tgz
TAR = $(shell which gtar || which tar)

run_tgz:
	(cd $(REL_PATH) && $(TAR) --format=ustar -czf ../$(tgz_rel_name) *)

.PHONY: apps dev qdev rel tgz depend

apps: $(foreach d_app_name,$(App_Names),$(d_app_file)) $(a_appup_dests)
	@echo Done!

dev: compile $(DEV_BUILD_DONE) $(REBAR)
	@echo Done! Use \'./bin/init.esh\' to install and then \'./bin/start.esh\' to boot.

rel: compile $(REL_BUILD_DONE) $(REBAR) rel_files
	@echo Done! New release has been created in \'$(REL_PATH)\'.

tgz: clean-tgz compile $(REL_BUILD_DONE) $(REBAR) rel_files run_tgz
	@echo Done! Created file: \'$(dir $(REL_PATH))$(tgz_rel_name)\'.

depend: $(all_dep_files)
	@echo "Dependency files regenerated"
